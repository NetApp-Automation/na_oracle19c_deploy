- block:
    - name: ONTAP cluster node names
      na_ontap_info:
        state: info
        hostname: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        https: true
        validate_certs: false
        gather_subset: "cluster_node_info"
        desired_attributes:
          cluster-node-info:
            node-name:
        summary: yes
      register: ontap_info_node_register
    - name: Check validity of ONTAP cluster nodes
      set_fact: 
        ontap_nodes_validity: yes
      when: nodes is subset(ontap_info_node_register.ontap_info.cluster_node_info)
  tags:
    - pre_req
    - ontap_config_svm
    - ontap_ls_mirror_volumes
    - ontap_config_job_schedule
    - ontap_snapmirror_relationship
    - ontap_unlock_svm_admin
    - ontap_svm_mgmt_lif
    - ontap_export_policy_rule
    - ontap_export_policy_apply
    - ontap_flexvol_create
    - ontap_nfs_lif
  rescue:
    - name: Failure message
      debug:
        msg:
          - "TASK [Check validity of ONTAP cluster nodes] FAILED. Hints:"
          - 1. Check the failure error message
          - 2. Check vars file to ensure there is no discrepancy in the variable declaration
          - 3. Ensure that there is no residual configuration on the controller that can cause failure of this task

- block:
    - name: ONTAP cluster aggregate names
      na_ontap_info:
        state: info
        hostname: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        https: true
        validate_certs: false
        gather_subset: "aggregate_info"
        desired_attributes:
          aggr-attributes:
            aggregate-name:
        summary: yes
      register: ontap_info_aggregate_register
    - name: Check validity of ONTAP cluster aggregates
      set_fact: 
        ontap_aggregates_validity: yes
      when: (data_aggregates | map(attribute='aggr_name') | list) is subset(ontap_info_aggregate_register.ontap_info.aggregate_info)
  tags:
    - pre_req
    - ontap_config_svm
    - ontap_ls_mirror_volumes
    - ontap_config_job_schedule
    - ontap_snapmirror_relationship
    - ontap_unlock_svm_admin
    - ontap_svm_mgmt_lif
    - ontap_export_policy_rule
    - ontap_export_policy_apply
    - ontap_flexvol_create
    - ontap_nfs_lif
  rescue:
    - name: Failure message
      debug:
        msg:
          - "TASK [Check validity of ONTAP cluster aggregates] FAILED. Hints:"
          - 1. Check the failure error message
          - 2. Check vars file to ensure there is no discrepancy in the variable declaration
          - 3. Ensure that there is no residual configuration on the controller that can cause failure of this task

- block:
    - name: ONTAP cluster VLAN check
      na_ontap_info:
        state: info
        hostname: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        https: true
        validate_certs: false
        gather_subset: "net_vlan_info"
      register: ontap_info_vlan_register
    - set_fact:
        ontap_vlan_check: "{{ ontap_vlan_check + [item] }}"
      vars:
        ontap_vlan_check: []
        query: "[].value[] | [?node=='{{ item }}'].vlanid[]"
      when: (storage_vlans | map(attribute='vlan_id') | list) is subset(ontap_info_vlan_register.ontap_info.net_vlan_info | dict2items | json_query(query))
      with_items: "{{ nodes }}"
    - name: Check validity of VLANs on ifgroups
      set_fact:
        ontap_vlan_validity: yes
      when: (ontap_vlan_check | difference(nodes) | list)|length==0
  tags:
    - pre_req
    - ontap_config_svm
    - ontap_ls_mirror_volumes
    - ontap_config_job_schedule
    - ontap_snapmirror_relationship
    - ontap_unlock_svm_admin
    - ontap_svm_mgmt_lif
    - ontap_export_policy_rule
    - ontap_export_policy_apply
    - ontap_flexvol_create
    - ontap_nfs_lif
  rescue:
    - name: Failure message
      debug:
        msg:
          - "TASK [Check validity of VLANs on ifgroups] FAILED. Hints:"
          - 1. Check the failure error message
          - 2. Check vars file to ensure there is no discrepancy in the variable declaration
          - 3. Ensure that there is no residual configuration on the controller that can cause failure of this task
