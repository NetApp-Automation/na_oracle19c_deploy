---
#Create the mirror volumes for the root volume
- name: Create the load-sharing mirror volumes for the Oracle root volume
  na_ontap_volume: 
    hostname: "{{ inventory_hostname }}" 
    username: "{{ username }}" 
    password: "{{ password }}" 
    state: present 
    vserver: "{{ svm_name }}"
    name: "{{ item.1.root_mirror_volume }}"
    aggregate_name: "{{ item.0.aggr_name }}" 
    size: 1 
    type: DP 
    https: true 
    validate_certs: false
  with_together:
    - "{{ data_aggregates }}"
    - "{{ root_mirror_volumes }}"

#Creat Job schedule for the root volume
- name: Create a job schedule for the snapmirror of root volume
  na_ontap_job_schedule: 
    hostname: "{{ inventory_hostname }}" 
    username: "{{ username }}" 
    password: "{{ password }}"
    state: present 
    name: "{{ item.job_name }}"
    job_minutes: "{{ item.job_minutes }}"
    https: true 
    validate_certs: false
  with_items:
    - "{{ job_schedule }}"
  tags:
    - ontap_config_job_schedule

# Create the SnapMirror relationship
- name: Create the SnapMirror relationships
  na_ontap_snapmirror:
    hostname: "{{ inventory_hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    state: present
    source_volume: "{{ svm_root_volume }}"
    destination_volume: "{{ item.root_mirror_volume }}"
    source_vserver: "{{ svm_name }}"
    destination_vserver: "{{ svm_name }}"
    relationship_type: load_sharing
    schedule: "{{ job_schedule.0.job_name }}"
    https: true
    validate_certs: false
  with_items:
    - "{{ root_mirror_volumes }}"
  tags:
    - ontap_snapmirror_relationship

# Initialize the mirroring relationship
- name: Initialize the mirroring relationship
  na_ontap_snapmirror:
    hostname: "{{ inventory_hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    state: present
    source_path: "{{ svm_name }}: {{ svm_root_volume }}"
    destination_path: "{{ svm_name }}:{{ item.root_mirror_volume }}"
    https: true
    validate_certs: false
  with_items:
    - "{{ root_mirror_volumes }}"
  tags:
    - ontap_snapmirror_relationship

#Set the password for vsadmin first. Account cannot be unlocked without password
- name: Set password for vsadmin user
  na_ontap_user:
    hostname: "{{ inventory_hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    state: present
    vserver: "{{ svm_name }}"
    applications: http,ontapi,ssh
    authentication_method: password
    role_name: vsadmin
    lock_user: yes
    name: vsadmin
    set_password: "{{ vsadmin_password }}"
    https: true
    validate_certs: false
  tags:
    - ontap_unlock_svm_sdmin
      
#Unlock vsadmin user
- name: Unlock vsadmin user
  na_ontap_user:
    hostname: "{{ inventory_hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    state: present
    vserver: "{{ svm_name }}"
    applications: http,ontapi,ssh
    authentication_method: password
    role_name: vsadmin
    lock_user: no
    name: vsadmin
    https: true
    validate_certs: false
  tags:
    - ontap_unlock_svm_admin      
