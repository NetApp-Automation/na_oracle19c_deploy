---
# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
# DB software only installation tasks block
# Execute 19.3 base installer and applied 19.8 patch in single installation
# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
- block:
    - name: Create folder for Oracle installation files
      file:
        state: directory
        path: '{{ installation_folder }}'
        owner: '{{ oracle_user }}'
        group: '{{ oracle_install_group }}'
      become: true

    - name: Create folder for installer files
      file:
        state: directory
        path: '{{ installer_dir }}'
        owner: '{{ oracle_user }}'
        group: '{{ oracle_install_group }}'
      become: true

    - name: Unpack Oracle 19c installer files
      ansible.builtin.unarchive:
        src: "{{ installer_dir }}/{{ installer_archives[0] }}"
        dest: "{{ installation_folder }}/"
        remote_src: yes
      become: true
      become_user: '{{ oracle_user }}'

    - name: Delete existing OPatch directory in oracle home
      ansible.builtin.file:
        path: "{{ oracle_home }}/OPatch"
        state: absent
      become: true
      become_user: '{{ oracle_user }}'

    - name: Extract current version of OPatch files - p6880880
      ansible.builtin.unarchive:
        src: "{{ installer_dir }}/{{ installer_archives[2] }}"
        dest: "{{ oracle_home }}/"
        remote_src: yes
      become: true
      become_user: '{{ oracle_user }}'
     
    - name: Unpack DB 19.8 RU patch files
      ansible.builtin.unarchive:
        src: "{{ installer_dir }}/{{ installer_archives[1] }}"
        dest: "{{ installer_dir }}/"
        remote_src: yes
      become: true
      become_user: '{{ oracle_user }}'

    - name: Generate the response file for software only installation
      ansible.builtin.template:
        src: "db_install.rsp.{{ ora_version }}"
        dest: "{{ installation_folder }}/db_install.rsp"
      become: true
      become_user: '{{ oracle_user }}'

    - name: Set ASSUME_DISTID to OL7
      ansible.builtin.replace:
        path: "{{ oracle_home }}/cv/admin/cvu_config"
        regexp: '#CV_ASSUME_DISTID=OEL5'
        replace: 'CV_ASSUME_DISTID=OL7'
      become: true
      become_user: '{{ oracle_user }}'
   
    - name: Install oracle software 19c
      when: ora_version == "19c"
      command: "{{ installation_folder}}/runInstaller -applyRU {{db_patch}} -silent -ignorePrereqFailure -responseFile {{ installation_folder }}/db_install.rsp"
      become: true
      become_user: '{{ oracle_user }}'
      ignore_errors: yes

    - name: Execute Inventory root command
      command: "{{ inventory_location }}/orainstRoot.sh"
      become: true

    - name: Execute DB home root command
      command: "{{ oracle_home }}/root.sh"
      become: true
  rescue:
    - name: Failure message
      debug:
        msg:
          - "TASK [Oracle software only install] FAILED. Hints:"
          - 1. Check the failure error message.
          - 2. Check any error message in oracle install logs.
          - 3. Check whether the task file exists.
          - 4. Check whether the task file name and extension is correct.
  tags:
    - software_only_install
